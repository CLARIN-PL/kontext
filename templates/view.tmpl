#*
Copyright (c) 2003-2009  Pavel Rychly

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; version 2
dated June, 1991.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*#
#from translation import ugettext as _
#from templating.filters import *
#from cmpltmpl.document import document
#extends document

#def title
KonText - $getVar('page_title', '') ($_('Concordance').lower())#slurp
#end def

#def headers

#if $righttoleft
<style>
.lc {direction: rtl}
.kw {direction: rtl}
.rc {direction: rtl}
</style>
#end if
#end def

#def bodyonload
require(['${client_model_dir}/${page_model}', 'conf'], function(pageSelf, conf) {
    conf.replicableQuery = #if $getVar('replicable_query', False)#true#else#false#end if#;
    conf.concLineMaxGroupNum = $conc_line_max_group_num;
    conf.WideCtxGlobals = $to_json($widectx_globals);
    conf.CorporaColumns = $to_json($CorporaColumns);
    conf.KWICCorps = $to_json($KWICCorps);
    conf.ViewMode = '${viewmode}';
    conf.ShowLineNumbers = #if $line_numbers#true#else#false#end if#;
    conf.Pagination = $to_json($pagination);
    conf.FromPage = #if $fromp#$fromp#else#0#end if#;
    conf.Lines = $to_json($Lines);
    conf.SortIdx = $to_json($Sort_idx);
    conf.ConcSize = $concsize;
    conf.FullSize = $fullsize;
    conf.SampledSize = $sampled_size;
    conf.ResultIpm = $result_relative_freq;
    conf.ResultArf = #if $result_arf#$result_arf#else#null#end if#;
    conf.ResultShuffled = $to_json($result_shuffled);
    conf.NumLinesInGroups = $num_lines_in_groups;
    conf.LinesGroupsNumbers = $to_json($lines_groups_numbers);
    conf.ContainsWithin = $to_json($getVar('query_contains_within', False));
    conf.SpeakerIdAttr = $to_json($speaker_id_attr);
    conf.SpeechOverlapAttr = $to_json($speech_overlap_attr);
    conf.SpeechOverlapVal = $to_json($speech_overlap_val);
    conf.SpeechAttrs = $to_json($speech_attrs);
    conf.SpeechSegment = $to_json($speech_segment);
    conf.StructCtx = $to_json($struct_ctx);
    ## query form
    conf.textTypesData = $text_types_data;
    conf.hasLemmaAttr = #if $has_lemmaattr#true#else#false#end if#;
    conf.Wposlist = $to_json($Wposlist);
    conf.CheckedSca = $to_json($checked_sca);
    conf.ConcFormsArgs = $to_json($conc_forms_args);
    conf.NumQueryOpSteps = $len($query_overview);
    conf.ConcFormsInitialArgs = $to_json($conc_forms_initial_args);
    conf.SubcorpList = $to_json($SubcorpList);
    conf.CurrentSubcorp = $to_json($usesubcorp);
    conf.ShuffleConcByDefault = $to_json($shuffle);
    conf.Lposlist = $to_json($Lposlist);
    conf.ForcedAttr = $to_json($getVar('force_cql_default_attr', None));
    conf.DefaultAttr = $to_json($default_attr);
    conf.AttrList = $to_json($getVar('AttrList', []));
    conf.StructAttrList = $to_json($getVar('StructAttrList', []));
    conf.TagsetDocUrl = $to_json($getVar('tagsetdoc', None));
    conf.InputLanguages = $to_json($input_languages);
    conf.FreqFormProps = $to_json($freq_form_args);
    conf.CollFormProps = $to_json($coll_form_args);
    ## sort form


    #if $running_calc
    conf.numLines = $len($Lines);
    conf.Unfinished = true;
    var model = pageSelf.init(conf);
    model.reloadHits(conf);
    #else
    conf.Unfinished = false;
    var model = pageSelf.init(conf);
    #end if
});
#end def


#def concordance
<div id="conc-wrapper">
    <div id="conc-top-bar"><div class="info-level">-</div></div>
    <img class="root-loader" src="${files_path}/img/ajax-loader.gif" title="$_('Loading...')" alt="$_('Loading...')" />
    <div id="conc-bottom-bar">-</div>
</div>
#end def